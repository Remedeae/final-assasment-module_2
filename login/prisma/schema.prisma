// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  firstName      String
  lastName       String
  profilePicture String? // optional profile picture (bonus in brief)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  sessions GameSession[]
}

model Game {
  id        String   @id @default(cuid())
  title     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  sessions GameSession[]
}

model GameSession {
  id     String @id @default(cuid())
  userId Int
  gameId String

  // Timer data
  startedAt   DateTime  @default(now())
  endedAt     DateTime?
  durationSec Int? // store computed seconds when STOP is pressed
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  // Indexes to support stats/leaderboards & range queries
  @@index([startedAt])
  @@index([userId, startedAt])
  @@index([gameId, startedAt])
}
